<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Upload Images</title>
  <link href="/style2.css" rel="stylesheet" type="text/css" />
  <link href="https://fonts.googleapis.com/css?family=Poppins:400,500,600,700&display=swap" rel="stylesheet" />
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: "Poppins", sans-serif;
    }

    .hero-section {
      display: flex;
      justify-content: center;
      align-items: center;
      height: auto;
      background-image:
        linear-gradient(360deg, rgba(34, 34, 34, 0.8), rgba(34, 34, 34, 0.8)),
        url("images/staffDash.jpeg");
      background-position: center;
      background-size: cover;
      background-repeat: no-repeat;
      padding: 20px;
    }

    .container {
      background-color: #fff;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      width: 400px;
      text-align: center;
    }

    h2 {
      margin-bottom: 20px;
      color: #333;
    }

    .form-group {
      margin-bottom: 20px;
    }

    label {
      display: block;
      margin-bottom: 8px;
      font-weight: bold;
      color: #555;
    }

    input[type="file"],
    input[type="text"] {
      border: 1px solid #ccc;
      border-radius: 4px;
      padding: 10px;
      width: 100%;
      max-width: 100%;
      min-width: 200px;
    }

    button {
      background-color: #ef5835;
      color: white;
      border: none;
      border-radius: 4px;
      padding: 10px 15px;
      cursor: pointer;
      transition: background-color 0.3s;
    }

    button:hover {
      background-color: #a22306;
    }

    .images-section {
      margin-top: 30px;
      text-align: center;
    }

    .images-table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 20px;
    }

    .images-table th,
    .images-table td {
      border: 1px solid #ccc;
      padding: 8px;
      text-align: left;
    }

    .images-table th {
      background-color: #f2f2f2;
    }
  </style>
</head>

<body>
  <div class="hero-section">
    <div class="container">
      <h2>Upload Images</h2>
      <form action="/add-image" method="POST" enctype="multipart/form-data" onsubmit="return confirmUpload()">
        <div class="form-group">
          <label for="images">Select Images:</label>
          <input type="file" id="images" name="images" multiple required />
        </div>
        <div class="form-group">
          <label for="description">Image Description:</label>
          <input type="text" id="description" name="description" required />
        </div>
        <div class="form-group">
          <button type="submit">Upload Images</button>
        </div>
      </form>
    </div>
  </div>

  <!-- Section to view all images -->
  <div class="images-section">
    <h2>All Images</h2>
    <table class="images-table">
      <thead>
        <tr>
          <th>Image</th>
          <th>Description</th>
          <th>Date</th>
          <th>Action</th>
        </tr>
      </thead>
      <tbody id="imagesBody">
        <!-- Dynamic Content Will Be Added Here -->
      </tbody>
    </table>
  </div>

  <script>
    function confirmUpload() {
      return confirm("Are you sure you want to upload these images?");
    }

    async function loadImages() {
      try {
        const response = await fetch('/api/images');
        if (!response.ok) {
          throw new Error('Network response was not ok');
        }

        const images = await response.json();
        const imagesBody = document.getElementById('imagesBody');
        imagesBody.innerHTML = '';

        images.forEach(image => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td><img src="${image.filename}" alt="Image" style="width: 50px; height: 50px;" /></td>
            <td>${image.description}</td>
            <td>${new Date(image.uploadedAt).toLocaleDateString()}</td>
            <td>
              <button onclick="deleteImage('${image._id}', this)">Delete</button>
            </td>
          `;
          imagesBody.appendChild(row);
        });
      } catch (error) {
        console.error('Error fetching images:', error);
      }
    }

    window.onload = loadImages;

    function deleteImage(imageId, btn) {
  if (confirm("Are you sure you want to delete this image?")) {
    fetch(`/delete-image/${imageId}`, { method: 'DELETE' }) // Corrected URL format
      .then(response => {
        if (response.ok) {
          alert("Image deleted successfully.");
          // Remove the corresponding row from the table
          const row = btn.closest('tr'); // Find the row of the button
          row.parentNode.removeChild(row); // Remove the row
        } else {
          alert("Failed to delete the image.");
        }
      })
      .catch(error => console.error('Error deleting image:', error));
  }
}

  </script>
</body>

</html>